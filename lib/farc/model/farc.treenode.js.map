{"version":3,"file":"farc.treenode.js","sourceRoot":"","sources":["../../../src/farc/model/farc.treenode.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * farc Baumknoten\n *\n * Damit das mit primeNG Tree verwendbar ist muss es das primeNG-interface imitieren:\n * (kein extends, sonst wuerde serverseitig primeNG gebraucht)\n *\n * export interface TreeNode {\n *   label?: string;\n *   data?: any;\n *   icon?: any;\n *   expandedIcon?: any;\n *   collapsedIcon?: any;\n *   children?: TreeNode[];\n *   leaf?: boolean;\n * }\n */\nimport {\n  FarcDriveTypes,\n  FarcEntryTypes,\n  FarcSelectType,\n} from \"./\";\n\n/*\n  Date\n  milis: number = date.getTime()\n  date: Date = new Date(milis)\n */\nexport interface FarcTreeNode /*extends TreeNode*/ {\n  label?: string;      // primeng.TreeNode -> file-/dir-name\n  timestamp?: number;   // milis -> wg. JSON.stringify\n  size?: number;\n  children?: FarcTreeNode[];  // TreeNode\n  files?: FarcTreeNode[];\n  entrytype?: FarcEntryTypes;\n  arc?: boolean;   // archive j/n\n  path?: string[];   // Pfad zu diesem Knoten\n  data?: any;          // primeng.TreeNode -> ignore\n  icon?: any;          // primeng.TreeNode -> run time\n  expandedIcon?: any;  // primeng.TreeNode -> run time\n  collapsedIcon?: any; // primeng.TreeNode -> run time\n  leaf?: boolean;      // primeng.TreeNode w/ lazy loading\n  type?: string;       // primeng.TreeNode -> Template\n  entryid?: string;\n  selected?: FarcSelectType;  // Auswahl\n  selectUid?: string;         //   UID\n  selectDate?: number;        //   milis\n  oe?: string;   // nur EP\n  drive?: FarcDriveTypes; // nur top node (drive)\n}\n"]}